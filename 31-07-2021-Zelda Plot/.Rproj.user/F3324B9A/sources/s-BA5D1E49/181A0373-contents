# Graficas:
options(scipen =999)
library(tidyverse)
library(ggtext)

# Datos:
carros <- readxl::read_xlsx("01_Datos/precios_carros.xlsx")

bd_grafica <- carros %>%
  group_by(marca) %>%
  summarise(precio_promedio = mean(precios),
            no_carros = n()) %>%
  arrange(-no_carros)


bd_grafica %>%
  ggplot(aes(x = reorder(marca, precio_promedio),
             y = precio_promedio)) +
  geom_col(fill = "#259B5C", color = "white") +
  geom_hline(yintercept = 1e6,
             color = "yellow",
             alpha = 0.3,
             linetype = 2) +
  geom_text(aes(label = str_c("$", prettyNum(precio_promedio, big.mark = ","))),
            color = "white", fontface = "bold", hjust = -0.1) +
  coord_flip() +
  labs(x = "", y = "",
       title = "Precio promedio por marca de carro<br>en Mercado Libre México",
       subtitle = "Precio revisado el día 22 de Julio del 2021 a un total de 1008 registros de coches",
       caption = "<b>Fuente: </b>Mercadolibre.com.mx") +
  scale_y_continuous(limits = c(0, 4e6),
                     labels = scales::dollar_format(),
                     expand = expansion(c(0,0))) +
  theme(plot.title = element_markdown(size = 20,
                                      color = "#22C9FD",
                                      face = "bold"),
        plot.subtitle = element_markdown(size = 13),
        plot.caption = element_markdown(color = "gray80"),
        text = element_text(family = "Poppins", color = "white"),
        plot.background = element_rect(fill = "#242840"),
        panel.background = element_rect(fill = "#242840"),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.minor.y  = element_blank(),
        panel.grid.major.y = element_line(color = "gray30"),
        axis.text = element_text(family = "Poppins",
                                 color = "white",
                                 size = 10),
        # axis.text.y = element_blank(),
        axis.line.x = element_line(color = "white"))


# Grafica de puntos:
carros %>%
  filter(marca %in% c("Toyota", "Chevrolet", "Volkswagen",
                      "Nissan","Dodge", "Honda" )) %>%
  ggplot(aes(x = kilometros, y = precios/1e6)) +
  geom_point(fill = "#259B5C", pch = 21, color = "white") +
  geom_smooth(method = "lm", color = "yellow") +
  facet_wrap(~marca) +
  scale_y_continuous(limits = c(0, 2),
                     labels = scales::dollar_format(suffix = "\nMDP"),
                     expand = expansion(c(0,0))) +
  scale_x_continuous(labels = scales::comma_format(suffix = "\nkm")) +
  labs(y = "Precios (MXN Jul 2021)", x = "Kilómetros",
       title = "Precio promedio por marca de carro<br>en Mercado Libre México",
       subtitle = "Relación entre kilometraje y precios de vehículos en venta.<br><b>Principales marcas</b>",
       caption = "<b>Fuente: </b>Mercadolibre.com.mx<br>Datos extraídos el 22 de julio del 2021. ") +
  theme(plot.title = element_markdown(size = 20,
                                      color = "#22C9FD",
                                      face = "bold"),
        plot.subtitle = element_markdown(size = 13),
        plot.caption = element_markdown(color = "gray80"),
        text = element_text(family = "Poppins", color = "white"),
        plot.background = element_rect(fill = "#242840"),
        panel.background = element_rect(fill = "#242840"),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.minor.y  = element_blank(),
        panel.grid.major.y = element_line(color = "gray30"),
        axis.text = element_text(family = "Poppins",
                                 color = "white",
                                 size = 10),
        # axis.text.y = element_blank(),
        axis.line.x = element_line(color = "white"),
        strip.background = element_rect(fill = "#259B5C"),
        strip.text.x = element_text(color = "white", face = "bold"))


# Mapa:
library(sf)
munis <- read_sf("https://raw.githubusercontent.com/JuveCampos/Shapes_Resiliencia_CDMX_CIDE/master/geojsons/Division%20Politica/mpios_con_menos_islas_aun.geojson")

edos <- read_sf("https://raw.githubusercontent.com/JuveCampos/Shapes_Resiliencia_CDMX_CIDE/master/geojsons/Division%20Politica/DivisionEstatal.geojson")

entidad = "Hidalgo"

for(entidad in unique(munis$NOM_ENT)){

idh <- readxl::read_xlsx("01_Datos/indice_desarrollo_humano.xlsx") %>%
  filter(year == max(year))

base_mapa <- left_join(munis, idh, by = c("CVEGEO" = "cve_mun"))

base_mapa %>%
  filter(NOM_ENT == entidad) %>%
  ggplot() +
  geom_sf(data = edos %>% filter(ENTIDAD == entidad), color = "white", size = 3) +
  geom_sf(aes(fill = valor), color = "gray80") +
  scale_fill_gradientn(colours = c("red", "yellow", "green")) +
  labs(fill = "Valor IDH",
       title = "Índice de Desarrollo Humano",
       subtitle = "Valor para cada uno de los municipios<br>Dato correspondiente a 2015") +
  theme(plot.title = element_markdown(size = 20,
                                      color = "#22C9FD",
                                      face = "bold"),
        plot.subtitle = element_markdown(size = 13),
        plot.caption = element_markdown(color = "gray80"),
        text = element_text(family = "Poppins", color = "white"),
        plot.background = element_rect(fill = "#242840"),
        legend.background = element_rect(fill = "#242840"),
        panel.background = element_rect(fill = "#242840"),
        panel.grid = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.minor.y  = element_blank(),
        panel.grid.major.y = element_blank(),
        axis.text = element_text(family = "Poppins",
                                 color = "white",
                                 size = 10),
        axis.text.y = element_blank(),
        axis.text.x = element_blank(),
        # axis.line.x = element_line(color = "white"),
        strip.background = element_rect(fill = "#22C9FD"),
        strip.text.x = element_text(color = "black", face = "bold"),
        legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top",
                             title.hjust = 0.5))


ggsave(str_c("03_Resultados/", entidad, "_idh.png"))
print(entidad)

}


# Datos influencers
influencer <- readxl::read_xlsx("01_Datos/datos_influencers.xlsx") %>%
  janitor::clean_names() %>%
  mutate(across(c(seg_5_jun:percent), as.numeric)) %>%
  filter(!is.na(seg_5_jun)) %>%
  arrange(-seg_5_jun) %>%
  head(n = 10) %>%
  select(1:3) %>%
  pivot_longer(cols = 2:3,
               names_to = "fecha",
               values_to = "seguidores") %>%
  mutate(fecha = ifelse(fecha == "seg_10_jun",
                        yes = "2021-06-10",
                        no = "2021-06-05") %>% as.Date())

influencer

# Hacemos grafica de influencers
influencer %>%
  ggplot(aes(x = fecha, y = seguidores,
             group = usuario, color = usuario)) +
  geom_point(pch = 21) +
  geom_line() +
  theme(plot.title = element_markdown(size = 20,
                                      color = "#22C9FD",
                                      face = "bold"),
        plot.subtitle = element_markdown(size = 13),
        plot.caption = element_markdown(color = "gray80"),
        text = element_text(family = "Poppins", color = "white"),
        plot.background = element_rect(fill = "#242840"),
        legend.background = element_rect(fill = "#242840"),
        panel.background = element_rect(fill = "#242840"),
        panel.grid = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.minor.y  = element_blank(),
        panel.grid.major.y = element_blank(),
        axis.text = element_text(family = "Poppins",
                                 color = "white",
                                 size = 10),
        axis.text.y = element_blank(),
        axis.text.x = element_blank(),
        # axis.line.x = element_line(color = "white"),
        strip.background = element_rect(fill = "#22C9FD"),
        strip.text.x = element_text(color = "black", face = "bold"),
        legend.position = "bottom") +
  guides(fill = guide_legend(title.position = "top",
                               title.hjust = 0.5))


influencer <- readxl::read_xlsx("01_Datos/datos_influencers.xlsx") %>%
  janitor::clean_names() %>%
  mutate(across(c(seg_5_jun:percent), as.numeric)) %>%
  filter(!is.na(seg_5_jun)) %>%
  arrange(percent) %>%
  mutate(percent = percent*100)

influencer %>%
  ggplot(aes(x = reorder(usuario, -percent), y = percent)) +
  geom_col(fill = "#259B5C") +
  labs(title = "Cambio en el numero de seguidores<br>en influencers que apoyaron al partido verde",
       subtitle = "<b style = 'color:yellow;'>Fechas de registro:</b> Del 5 al 10 de junio del 2021") +
  coord_flip() +
  theme(plot.title = element_markdown(size = 20,
                                      color = "#22C9FD",
                                      face = "bold"),
        plot.subtitle = element_markdown(size = 13),
        plot.caption = element_markdown(color = "gray80"),
        text = element_text(family = "Poppins", color = "white"),
        plot.background = element_rect(fill = "#242840"),
        legend.background = element_rect(fill = "#242840"),
        panel.background = element_rect(fill = "#242840"),
        # panel.grid = element_blank(),
        panel.grid.major.x = element_blank(),
        # panel.grid.minor.x = element_blank(),
        # panel.grid.minor.y  = element_blank(),
        panel.grid.major.y = element_blank(),
        axis.text = element_text(family = "Poppins",
                                 color = "white",
                                 size = 5),
        # axis.text.y = element_blank(),
        # axis.text.x = element_blank(),
        # axis.line.x = element_line(color = "white"),
        strip.background = element_rect(fill = "#22C9FD"),
        strip.text.x = element_text(color = "black", face = "bold"),
        legend.position = "bottom") +
  guides(fill = guide_legend(title.position = "top",
                             title.hjust = 0.5))

